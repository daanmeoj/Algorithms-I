
public class LinkedList {
	private Node first;
	private Node last;
	
	private class Node {
		private int value;
		private Node next;
		Node(int value){
			this.value=value;
		}
	}
	public void addLast(int item) {
		Node node=new Node(item);
		if(isEmpty()) 
			first=last=node;
		else {
			last.next=node;
			last=node;
		}
		
	}
	
	public void addFirst(int item) {
		Node node=new Node(item);
		if(isEmpty()) 
			first=last=node;
		else {
			node.next=first;
			first=node;
		}

	}
	
	public int indexOF(int item) {
		Node current=first;
		int index=0;
		while(current!=null) {
			if(current.value==item)
				return index;
			current=current.next;
			index++;
		}
		return -1;
	}
	
	public boolean contains(int item) {
		Node current=first;
		boolean contains;
		while(current!=null) {
			if(current.value==item)
				return index;
			current=current.next;
			index++;
		}
		return -1;
	}
	
	private boolean isEmpty() {
		return first==null;
	}
}
